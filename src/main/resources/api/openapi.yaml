openapi: 3.0.1
info:
  title: OpenAPI definition
  version: v0
servers:
  - url: http://localhost:8080/openapi
    description: Generated server url
tags:
  - name: Time Off
    description: API For Time Off Requests
  - name: Users
    description: API For Users
paths:
  /time-off-requests/{requestId}:
    get:
      tags:
        - Time Off
      operationId: getTimeOffRequest
      parameters:
        - name: requestId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/TimeOffRequest'
    put:
      tags:
        - Time Off
      operationId: updateTimeOffRequest
      parameters:
        - name: requestId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeOffRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/TimeOffRequest'
    delete:
      tags:
        - Time Off
      operationId: deleteTimeOffRequest
      parameters:
        - name: requestId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: OK
  /time-off-requests:
    get:
      tags:
        - Time Off
      operationId: searchTimeOffRequests
      parameters:
        - name: user
          in: query
          required: false
          schema:
            type: string
        - name: from
          in: query
          required: false
          schema:
            type: string
            format: date
        - name: to
          in: query
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          description: "Ok, search completed"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TimeOffRequest"
    post:
      tags:
        - Time Off
      operationId: createNewTimeOffRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TimeOffRequest'
        required: true
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/TimeOffRequest'
        "400":
          description: "Invalid Request"
          content:
            application/problem+json:
              examples:
                invalidDates:
                  summary: "Invalid Date Range"
                  value: { "type": "/error/invalid-date-range" }
                invalidId:
                  summary: "Invalid ID. Not allowed when creating"
                  value: { "type": "/error/invalid-id" }
              schema:
                $ref: "#/components/schemas/Problem"
        "403":
          description: "Forbidden"
          content:
            application/problem+json:
              schema:
                $ref: "#/components/schemas/Problem"
  /users:
    get:
      tags:
        - Users
      operationId: getAllUsers
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /users/{id}:
    get:
      tags:
        - Users
      operationId: getUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            'application/json':
              schema:
                $ref: '#/components/schemas/User'
components:
  schemas:
    TimeOffRequest:
      type: object
      properties:
        utente:
          type: string
        tipologia:
          type: string
        periodo:
          type: array
          items:
            type: string
            format: "dd/mm/yyyy"
            example: "03/01/2024"
        orario:
          type: array
          items:
            type: array
            items:
              type: string
              format: "hh:mm"
              example: "10:00"
        created:
          type: string
          example: "02/01/2024"
        esito:
          type: string
          enum:
            - ACCEPTED
            - REFUSED
            - PENDING
          description: Stato del p√®rmesso


    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        name:
          type: string
        surname:
          type: string
        email:
          type: string
    Problem:
      description: error occurred - see status code and problem object for more information.
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the problem type.  When dereferenced,
            it SHOULD provide human-readable documentation for the problem type
            (e.g., using HTML).
          default: "about:blank"
          example: "https://zalando.github.io/problem/constraint-violation"
        title:
          type: string
          description: |
            A short, summary of the problem type. Written in english and readable
            for engineers (usually not suited for non technical stakeholders and
            not localized); example: Service Unavailable
        status:
          type: integer
          format: int32
          description: |
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
          example: 503
        detail:
          type: string
          description: |
            A human readable explanation specific to this occurrence of the
            problem.
          example: Connection to database timed out
        instance:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the specific occurrence of the problem.
            It may or may not yield further information if dereferenced.
